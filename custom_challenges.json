{
    "easy": [
        {
            "title": "Default Password",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "If a username is 'admin', what is the most common password that hackers try first?",
            "category": "Security",
            "hint": "It's the same as the username!",
            "points": 5,
            "answer": "admin",
            "explanation": "Using 'admin' as both username and password is a critical security mistake. Hackers always try default credentials first because many people don't change them. This is especially common in routers, IoT devices, and new installations of software.",
            "key_points": "• Never use default credentials\n• Always change default passwords immediately after installation\n• Use strong, unique passwords for each account\n• Default credentials are the first thing attackers try",
            "related_topics": "• Password Security\n• Default Configurations\n• Brute Force Attacks\n• Security Best Practices"
        },
        {
            "title": "Safe Protocol",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "What letter should come before 'ttp' in a website address to make it secure?",
            "category": "Web Security",
            "hint": "It makes http into https",
            "points": 5,
            "answer": "s",
            "explanation": "The 's' in HTTPS stands for 'Secure'. When you see 'https://' at the start of a URL, it means the website is using SSL/TLS encryption to protect your data. This encryption prevents attackers from intercepting and reading sensitive information like passwords or credit card numbers.",
            "key_points": "• HTTPS encrypts all data between your browser and the server\n• Look for the padlock icon in your browser\n• Never enter sensitive information on non-HTTPS sites\n• Modern websites should always use HTTPS",
            "related_topics": "• SSL/TLS Encryption\n• Web Security\n• Data Privacy\n• Network Security"
        },
        {
            "title": "Hidden Files",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "In Linux, what symbol at the start of a filename makes it hidden?",
            "category": "Linux Security",
            "hint": "It's a dot (.)",
            "points": 5,
            "answer": ".",
            "explanation": "In Linux and Unix systems, any file that starts with a dot (.) is automatically hidden from normal directory listings. This is a simple but effective way to hide configuration files and folders from casual users. For example, .ssh folder contains SSH keys, and .bashrc contains shell configurations.",
            "key_points": "• Hidden files start with a dot (.)\n• Use 'ls -a' to see hidden files\n• Many config files are hidden by default\n• Hidden doesn't mean secure"
        },
        {
            "title": "Password Length",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "What is the minimum number of characters a secure password should have?",
            "category": "Password Security",
            "hint": "It's more than 7 but less than 9",
            "points": 5,
            "answer": "8",
            "explanation": "8 characters is the minimum length for a secure password according to most security standards. This length provides enough complexity to resist basic brute-force attacks. However, modern recommendations suggest using even longer passwords (12-16 characters) for better security.",
            "key_points": "• 8 characters is the minimum\n• Longer passwords are stronger\n• Combine with special characters\n• Use passphrases for better security"
        },
        {
            "title": "Folder Permission",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "In Linux, what 3-digit number gives full permission (read, write, execute) to a file?",
            "category": "Linux Security",
            "hint": "All permissions are 7, so three times...",
            "points": 5,
            "answer": "777",
            "explanation": "777 represents full permissions for owner, group, and others. Each 7 is the sum of read (4), write (2), and execute (1) permissions. However, using 777 is often considered dangerous as it gives everyone full access to the file.",
            "key_points": "• 7 means full access (4+2+1)\n• Three digits for owner, group, others\n• 777 is often too permissive\n• Use more restrictive permissions when possible"
        },
        {
            "title": "Safe Extension",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "Which file extension is safer to open: .txt or .exe?",
            "category": "File Security",
            "hint": "One can run programs, one just shows text",
            "points": 5,
            "answer": "txt",
            "explanation": ".txt files are safer because they only contain plain text and cannot execute malicious code. .exe files are executable programs that can potentially contain malware or viruses. Always be cautious when opening .exe files, especially from unknown sources.",
            "key_points": "• .txt files only contain text\n• .exe files can run programs\n• Never open .exe files from untrusted sources\n• Text files cannot contain executable code"
        },
        {
            "title": "Lock Symbol",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "What symbol appears in your browser when a website is secure? (One word)",
            "category": "Web Security",
            "hint": "It keeps things safe, like a door",
            "points": 5,
            "answer": "lock",
            "explanation": "The lock symbol in your browser indicates that the website is using HTTPS encryption. This padlock tells users that their connection to the website is secure and that any data they send (like passwords or credit card information) will be encrypted.",
            "key_points": "• Lock means HTTPS is active\n• Check for the lock before entering sensitive data\n• No lock means potential security risk\n• Modern browsers show clear security indicators"
        },
        {
            "title": "Strong Character",
            "platform": "K-Tech Somali",
            "difficulty": "easy",
            "description": "Which special character makes passwords stronger: # or space?",
            "category": "Password Security",
            "hint": "Spaces can cause problems in passwords",
            "points": 5,
            "answer": "#",
            "explanation": "The # symbol is better for passwords because spaces can cause technical issues in some systems. Special characters like # make passwords stronger by adding complexity and making them harder to guess. Spaces can also be trimmed by some systems or cause problems in command-line interfaces.",
            "key_points": "• Special characters increase password strength\n• Spaces can cause technical problems\n• # is widely supported in passwords\n• Mix special characters with letters and numbers"
        }
    ],
    "medium": [
        {
            "title": "Port Number",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "What port number do secure (HTTPS) websites use?",
            "category": "Network Security",
            "hint": "It's 80 + 363",
            "points": 10,
            "answer": "443",
            "explanation": "Port 443 is the standard port for HTTPS traffic. This port was specifically chosen for secure web traffic to separate it from regular HTTP (port 80). When you connect to a website using HTTPS, your browser automatically uses port 443 to establish an encrypted connection using SSL/TLS protocols.",
            "key_points": "• Port 443 is reserved for HTTPS worldwide\n• Regular HTTP uses port 80\n• Encryption happens automatically on port 443\n• Firewalls often allow port 443 by default",
            "related_topics": "• Network Ports\n• SSL/TLS Protocols\n• Firewall Configuration\n• Web Security Standards"
        },
        {
            "title": "Read Permission",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "In Linux, what single number gives read-only permission to a file?",
            "category": "Linux Security",
            "hint": "Read = 4, Write = 2, Execute = 1",
            "points": 10,
            "answer": "4",
            "explanation": "The number 4 represents read-only permission in Linux. This is part of the octal notation system where read=4, write=2, and execute=1. Read-only permission (4) allows users to view file contents but not modify or execute them.",
            "key_points": "• Read permission = 4\n• Allows viewing file contents\n• Cannot modify or execute\n• Common for configuration files"
        },
        {
            "title": "Write Permission",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "In Linux, what single number gives write-only permission to a file?",
            "category": "Linux Security",
            "hint": "Read = 4, Write = 2, Execute = 1",
            "points": 10,
            "answer": "2",
            "explanation": "The number 2 represents write-only permission in Linux's octal notation system. This unusual permission allows modifying a file without being able to read or execute it. While rare in practice, it's used in special cases like log files or printer spoolers.",
            "key_points": "• Write permission = 2\n• Can modify but not read/execute\n• Rare but useful for specific cases\n• Often combined with other permissions"
        },
        {
            "title": "Execute Permission",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "In Linux, what single number gives execute-only permission to a file?",
            "category": "Linux Security",
            "hint": "Read = 4, Write = 2, Execute = 1",
            "points": 10,
            "answer": "1",
            "explanation": "The number 1 represents execute-only permission in Linux. This permission allows running a program but not viewing or modifying its contents. This is useful for protecting proprietary software where you want users to run but not examine the code.",
            "key_points": "• Execute permission = 1\n• Can run but not read/modify\n• Used for binary programs\n• Protects source code privacy"
        },
        {
            "title": "No Permission",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "In Linux, what single number removes all permissions from a file?",
            "category": "Linux Security",
            "hint": "No permission means zero",
            "points": 10,
            "answer": "0",
            "explanation": "Zero (0) removes all permissions from a file in Linux. This means no one can read, write, or execute the file. This is the most restrictive permission and is used when you want to completely lock down a file from all access except by the root user.",
            "key_points": "• 0 means no permissions at all\n• Cannot read, write, or execute\n• Most restrictive setting\n• Only root can override"
        },
        {
            "title": "Password Numbers",
            "platform": "K-Tech Somali",
            "difficulty": "medium",
            "description": "What number is commonly added to the end of weak passwords? (2 digits)",
            "category": "Password Security",
            "hint": "It's the last two digits of '123'",
            "points": 10,
            "answer": "23",
            "explanation": "The number '23' often appears at the end of passwords because it follows the common pattern '123'. This is a very weak practice as hackers know these patterns. Many users add '23' thinking it makes their password stronger, but it's actually a well-known pattern that's easily guessed.",
            "key_points": "• '23' comes from '123' pattern\n• Predictable number patterns are weak\n• Avoid sequential numbers in passwords\n• Use random numbers instead"
        }
    ],
    "hard": [
        {
            "title": "Full Permission",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What single number gives read, write, AND execute permission in Linux?",
            "category": "Linux Security",
            "hint": "Add: Read (4) + Write (2) + Execute (1)",
            "points": 15,
            "answer": "7",
            "explanation": "The number 7 represents full permissions in Linux's octal notation system. It's calculated by adding read (4), write (2), and execute (1) permissions together: 4+2+1=7. While this gives complete access to a file, it should be used carefully as it allows all operations on the file. In production environments, this level of access should be limited to prevent security risks.",
            "key_points": "• 7 combines all permissions (4+2+1)\n• Allows reading, writing, and executing\n• Use with caution - very permissive\n• Often indicates security misconfiguration"
        },
        {
            "title": "Read Write",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What single number gives read AND write permission in Linux?",
            "category": "Linux Security",
            "hint": "Add: Read (4) + Write (2)",
            "points": 15,
            "answer": "6",
            "explanation": "The number 6 combines read (4) and write (2) permissions in Linux. This common permission setting allows viewing and modifying files but prevents execution. It's often used for data files where you want users to be able to edit content but not run it as a program.",
            "key_points": "• 6 = Read (4) + Write (2)\n• Can view and modify files\n• Cannot execute programs\n• Common for data files"
        },
        {
            "title": "Read Execute",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What single number gives read AND execute permission in Linux?",
            "category": "Linux Security",
            "hint": "Add: Read (4) + Execute (1)",
            "points": 15,
            "answer": "5",
            "explanation": "The number 5 combines read (4) and execute (1) permissions in Linux. This permission setting is common for program files and scripts where users need to both read and run the file, but shouldn't modify it. It's often used for shared binaries and system commands.",
            "key_points": "• 5 = Read (4) + Execute (1)\n• Can view and run files\n• Cannot modify content\n• Common for shared programs"
        },
        {
            "title": "Write Execute",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What single number gives write AND execute permission in Linux?",
            "category": "Linux Security",
            "hint": "Add: Write (2) + Execute (1)",
            "points": 15,
            "answer": "3",
            "explanation": "The number 3 combines write (2) and execute (1) permissions in Linux. This unusual combination allows modifying and running a file without being able to read it. While rare, it's sometimes used in special cases where you want to allow updating a program without viewing its contents.",
            "key_points": "• 3 = Write (2) + Execute (1)\n• Can modify and run files\n• Cannot read contents\n• Rare but useful for updates"
        },
        {
            "title": "Common Port",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What port number do regular (HTTP) websites use?",
            "category": "Network Security",
            "hint": "It's between 70 and 90",
            "points": 15,
            "answer": "80",
            "explanation": "Port 80 is the standard port for HTTP (unencrypted web traffic). This port has been the default for web servers since the early days of the internet. However, modern websites often redirect port 80 traffic to port 443 (HTTPS) for better security.",
            "key_points": "• Port 80 is standard for HTTP\n• Not encrypted by default\n• Should redirect to HTTPS\n• Basic web server port"
        },
        {
            "title": "Safe Protocol",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What does the 'S' in HTTPS stand for?",
            "category": "Web Security",
            "hint": "It makes the connection safe",
            "points": 15,
            "answer": "Secure",
            "explanation": "The 'S' in HTTPS stands for 'Secure'. This indicates that the HTTP protocol is running over SSL/TLS encryption. This security layer ensures that all data transmitted between your browser and the web server is encrypted and protected from eavesdropping or tampering.",
            "key_points": "• HTTPS = HTTP + Secure\n• Uses SSL/TLS encryption\n• Protects data in transit\n• Required for sensitive data"
        },
        {
            "title": "SSH Port",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the default port number for SSH connections?",
            "category": "Network Security",
            "hint": "It's between 20 and 23",
            "points": 15,
            "answer": "22",
            "explanation": "Port 22 is the default port for SSH (Secure Shell) connections. SSH is a secure protocol used for remote server access and secure file transfers. While you can configure SSH to use different ports for security through obscurity, port 22 is the standard that most systems use by default. This port should be carefully protected and monitored for brute force attacks.",
            "key_points": "• Port 22 is standard for SSH\n• Used for secure remote access\n• Often targeted by attackers\n• Can be changed for security"
        },
        {
            "title": "FTP Port",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the default port number for FTP connections?",
            "category": "Network Security",
            "hint": "It's between 19 and 22",
            "points": 15,
            "answer": "21",
            "explanation": "Port 21 is the default control port for FTP (File Transfer Protocol). FTP uses two ports: 21 for commands and 20 for data transfer. However, standard FTP is considered insecure because it sends data in plaintext. Modern systems should use SFTP (SSH File Transfer Protocol) or FTPS (FTP over SSL/TLS) instead for secure file transfers.",
            "key_points": "• Port 21 is for FTP control\n• Port 20 is for FTP data\n• Plain FTP is insecure\n• Use SFTP or FTPS instead"
        },
        {
            "title": "DNS Port",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What port number does DNS (Domain Name System) use?",
            "category": "Network Security",
            "hint": "It's between 50 and 54",
            "points": 15,
            "answer": "53",
            "explanation": "Port 53 is used by DNS (Domain Name System) for both UDP and TCP connections. DNS is crucial for converting domain names (like google.com) into IP addresses. While UDP is used for regular queries, TCP is used for larger responses and zone transfers. DNS security is critical as attacks like DNS poisoning can redirect users to malicious sites.",
            "key_points": "• Port 53 serves DNS traffic\n• Uses both UDP and TCP\n• Critical for internet functionality\n• Vulnerable to various attacks"
        },
        {
            "title": "SQL Injection",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What character is commonly used to comment out the rest of an SQL query in SQL injection attacks?",
            "category": "Web Security",
            "hint": "It's a double character starting with -",
            "points": 15,
            "answer": "--",
            "explanation": "The double dash (--) is used to comment out the remainder of an SQL query. In SQL injection attacks, hackers often use this to bypass authentication by commenting out the rest of the query. This is why input validation and prepared statements are crucial for preventing SQL injection.",
            "key_points": "• -- comments out SQL code\n• Common in SQL injection attacks\n• Use prepared statements\n• Never trust user input"
        },
        {
            "title": "XSS Prevention",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What HTML character should you encode to prevent basic XSS attacks? (Use symbol)",
            "category": "Web Security",
            "hint": "It's used in HTML tags",
            "points": 15,
            "answer": "<",
            "explanation": "The less-than symbol (<) is crucial to encode because it starts HTML tags. By encoding it to &lt;, you prevent attackers from injecting malicious script tags. This is a fundamental part of XSS (Cross-Site Scripting) prevention, along with encoding other special characters.",
            "key_points": "• Encode < to &lt;\n• Prevents script injection\n• Basic XSS prevention\n• Part of input sanitization"
        },
        {
            "title": "Hash Algorithm",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the recommended hash algorithm for passwords in 2024? (starts with b)",
            "category": "Cryptography",
            "hint": "It's designed for passwords specifically",
            "points": 15,
            "answer": "bcrypt",
            "explanation": "bcrypt is specifically designed for password hashing and includes built-in salt generation. Unlike general-purpose hash functions like MD5 or SHA, bcrypt is deliberately slow to make brute-force attacks more difficult. It also automatically handles salt management.",
            "key_points": "• bcrypt is password-specific\n• Includes automatic salting\n• Deliberately slow by design\n• Industry standard for passwords"
        },
        {
            "title": "CSRF Token",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "How many characters minimum should a CSRF token have to be secure?",
            "category": "Web Security",
            "hint": "It's between 30 and 34",
            "points": 15,
            "answer": "32",
            "explanation": "A CSRF (Cross-Site Request Forgery) token should be at least 32 characters long to provide sufficient randomness. This length ensures enough entropy to prevent token guessing attacks. The token should be cryptographically random and unique for each session.",
            "key_points": "• 32 chars minimum length\n• Must be random\n• Unique per session\n• Prevents CSRF attacks"
        },
        {
            "title": "Secure Headers",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What HTTP header prevents clickjacking attacks? (X-Frame-?)",
            "category": "Web Security",
            "hint": "It controls frame options",
            "points": 15,
            "answer": "Options",
            "explanation": "X-Frame-Options header prevents clickjacking attacks by controlling how a page can be embedded in iframes. Setting it to 'DENY' or 'SAMEORIGIN' prevents malicious sites from embedding your content in hidden frames to trick users into clicking malicious elements.",
            "key_points": "• Prevents clickjacking\n• Controls iframe usage\n• Use DENY or SAMEORIGIN\n• Critical security header"
        },
        {
            "title": "TLS Version",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the minimum secure TLS version in 2024? (1.x)",
            "category": "Network Security",
            "hint": "Version after 1.1",
            "points": 15,
            "answer": "1.2",
            "explanation": "TLS 1.2 is the minimum secure version as of 2024. While TLS 1.3 is newer and more secure, 1.2 is still considered safe when properly configured. Earlier versions (1.0 and 1.1) are deprecated due to known vulnerabilities and should not be used.",
            "key_points": "• TLS 1.2 minimum standard\n• TLS 1.3 preferred\n• Older versions unsafe\n• Regular updates needed"
        },
        {
            "title": "Password Salt",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the minimum recommended length (in bytes) for a password salt?",
            "category": "Cryptography",
            "hint": "It's between 15 and 17",
            "points": 15,
            "answer": "16",
            "explanation": "A password salt should be at least 16 bytes (128 bits) long to provide sufficient randomness. This length ensures that rainbow table attacks are impractical, as each salt would require its own massive rainbow table. The salt should be generated using a cryptographically secure random number generator.",
            "key_points": "• 16 bytes minimum\n• Must be random\n• Unique per password\n• Prevents rainbow tables"
        },
        {
            "title": "JWT Algorithm",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the most secure JWT signing algorithm? (Starts with HS)",
            "category": "Web Security",
            "hint": "Uses SHA-512",
            "points": 15,
            "answer": "HS512",
            "explanation": "HS512 (HMAC with SHA-512) is the most secure symmetric JWT signing algorithm. It provides a 512-bit hash, making it more resistant to attacks than HS256 or HS384. However, for public-key cryptography, RS512 or ES512 might be preferred.",
            "key_points": "• Uses SHA-512 hash\n• Symmetric encryption\n• Stronger than HS256\n• Key must be secret"
        },
        {
            "title": "Directory Traversal",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What characters are used in path traversal attacks to go up directories? (../)",
            "category": "Web Security",
            "hint": "Dot dot slash",
            "points": 15,
            "answer": "../",
            "explanation": "The '../' (dot dot slash) sequence is used in path traversal attacks to navigate up directory levels. Attackers use this to access files outside the intended directory. This is why proper input validation and path sanitization are crucial for file operations.",
            "key_points": "• ../ moves up directories\n• Common in path traversal\n• Sanitize file paths\n• Use absolute paths"
        },
        {
            "title": "Secure Cookie",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What flag must be set on cookies to require HTTPS? (Exact word)",
            "category": "Web Security",
            "hint": "It's about being secure",
            "points": 15,
            "answer": "Secure",
            "explanation": "The 'Secure' flag on cookies ensures they are only transmitted over HTTPS connections. This prevents attackers from stealing cookies through man-in-the-middle attacks on unencrypted connections. It's essential for session cookies and other sensitive data.",
            "key_points": "• Requires HTTPS\n• Prevents cookie theft\n• Essential for sessions\n• Network security measure"
        },
        {
            "title": "Firewall Rule",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the most secure default firewall policy? (ACCEPT/DROP/REJECT)",
            "category": "Network Security",
            "hint": "Silently block everything",
            "points": 15,
            "answer": "DROP",
            "explanation": "DROP is the most secure default firewall policy because it silently discards packets without sending any response. Unlike REJECT which sends back an error, DROP gives no information to potential attackers about why their packets were blocked, following the principle of minimal information disclosure.",
            "key_points": "• Silently blocks packets\n• No response to attacker\n• More secure than REJECT\n• Default deny principle"
        },
        {
            "title": "Buffer Size",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the maximum safe buffer size (in bytes) to prevent most buffer overflow attacks?",
            "category": "Application Security",
            "hint": "It's between 1023 and 1025",
            "points": 15,
            "answer": "1024",
            "explanation": "1024 bytes (1KB) is often considered a safe buffer size limit. While the actual safe size depends on the application, 1024 bytes is a common choice that balances functionality with security. Larger buffers increase the risk of buffer overflow attacks if not properly managed.",
            "key_points": "• 1KB is standard limit\n• Prevents buffer overflow\n• Balance security/function\n• Use bounds checking"
        },
        {
            "title": "Secure RNG",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What Linux device provides cryptographically secure random numbers? (/dev/?random)",
            "category": "Cryptography",
            "hint": "Not pseudo random",
            "points": 15,
            "answer": "urandom",
            "explanation": "/dev/urandom is the recommended source for cryptographically secure random numbers on Linux systems. While /dev/random might block waiting for entropy, /dev/urandom provides a non-blocking source of secure random numbers suitable for most cryptographic purposes.",
            "key_points": "• Non-blocking operation\n• Cryptographically secure\n• Better than /dev/random\n• Standard for crypto use"
        },
        {
            "title": "Key Length",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the minimum secure RSA key length in bits for 2024?",
            "category": "Cryptography",
            "hint": "It's between 2047 and 2049",
            "points": 15,
            "answer": "2048",
            "explanation": "2048 bits is the minimum secure RSA key length as of 2024. This provides adequate security against factorization attacks with current computing power. While 4096 bits offers more security margin, 2048 bits is still considered safe for most applications when properly implemented.",
            "key_points": "• 2048 bits minimum\n• Safe against factoring\n• 4096 bits preferred\n• Regular key rotation"
        },
        {
            "title": "CORS Header",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What header allows cross-origin requests? (Access-Control-Allow-?)",
            "category": "Web Security",
            "hint": "It's about origin",
            "points": 15,
            "answer": "Origin",
            "explanation": "The Access-Control-Allow-Origin header controls which domains can access resources in a cross-origin manner. This header is crucial for CORS (Cross-Origin Resource Sharing) security. Setting it to '*' allows any domain to access the resource, which can be dangerous.",
            "key_points": "• Controls CORS access\n• Specific origins safer\n• Avoid using *\n• Critical for APIs"
        },
        {
            "title": "Secure Shell",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the most secure SSH key type? (starts with ed)",
            "category": "Network Security",
            "hint": "Named after a curve",
            "points": 15,
            "answer": "ed25519",
            "explanation": "Ed25519 is the most secure and modern SSH key type. It uses elliptic curve cryptography, providing strong security with shorter key lengths compared to RSA. It's also faster and more resistant to implementation mistakes than other key types.",
            "key_points": "• Modern elliptic curve\n• Shorter than RSA\n• Better performance\n• Strong security"
        },
        {
            "title": "Password Chars",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "How many character types minimum should a secure password have? (number/upper/lower/special)",
            "category": "Password Security",
            "hint": "All main types",
            "points": 15,
            "answer": "4",
            "explanation": "A secure password should contain at least 4 different character types: uppercase letters, lowercase letters, numbers, and special characters. This diversity increases the password's entropy and makes it more resistant to brute force attacks.",
            "key_points": "• Use all char types\n• Increases entropy\n• Harder to crack\n• Basic security rule"
        },
        {
            "title": "Cache Control",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What Cache-Control value prevents storing sensitive data? (no-?)",
            "category": "Web Security",
            "hint": "Opposite of store",
            "points": 15,
            "answer": "store",
            "explanation": "The Cache-Control: no-store directive prevents browsers from storing sensitive data in any cache. Unlike no-cache which allows storing but requires revalidation, no-store ensures the data is never written to disk, making it crucial for sensitive information.",
            "key_points": "• Prevents all caching\n• Stronger than no-cache\n• For sensitive data\n• Performance impact"
        },
        {
            "title": "Secure Port",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What port does SFTP (SSH File Transfer) use?",
            "category": "Network Security",
            "hint": "Same as SSH",
            "points": 15,
            "answer": "22",
            "explanation": "SFTP uses port 22, the same port as SSH, because it runs over the SSH protocol. This is different from traditional FTP (port 21) and provides encrypted file transfer by default. The shared port usage simplifies firewall rules and security management.",
            "key_points": "• Uses SSH port\n• Encrypted by default\n• Better than FTP\n• Simpler firewall rules"
        },
        {
            "title": "Hash Length",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "How many characters is a SHA-256 hash? (in hex)",
            "category": "Cryptography",
            "hint": "Each byte is 2 hex chars",
            "points": 15,
            "answer": "64",
            "explanation": "A SHA-256 hash is 64 characters long when represented in hexadecimal. This is because SHA-256 produces a 256-bit (32-byte) hash, and each byte is represented by 2 hexadecimal characters. This fixed length is one of the key properties of cryptographic hash functions.",
            "key_points": "• 256 bits = 32 bytes\n• 32 bytes = 64 hex chars\n• Fixed output length\n• Standard hash size"
        },
        {
            "title": "Memory Safety",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What C function should replace gets() for safer input? (s gets)",
            "category": "Application Security",
            "hint": "Safer version of gets",
            "points": 15,
            "answer": "fgets",
            "explanation": "fgets() is the safe alternative to gets() in C. Unlike gets(), which can cause buffer overflows, fgets() requires specifying a maximum length for input. This prevents buffer overflow vulnerabilities that are common with unbounded input functions.",
            "key_points": "• Prevents buffer overflow\n• Requires length limit\n• Safer than gets()\n• Basic secure coding"
        },
        {
            "title": "Secure Algo",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the most secure symmetric encryption algorithm? (AES-?)",
            "category": "Cryptography",
            "hint": "Highest bit version",
            "points": 15,
            "answer": "256",
            "explanation": "AES-256 is the most secure version of the AES (Advanced Encryption Standard) algorithm. It uses a 256-bit key length, making it quantum-resistant and suitable for top-secret data. While AES-128 is still secure, AES-256 provides an extra security margin.",
            "key_points": "• 256-bit key length\n• Quantum resistant\n• Military grade\n• Industry standard"
        },
        {
            "title": "Secure Mode",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the most secure block cipher mode? (GCM/CBC/ECB)",
            "category": "Cryptography",
            "hint": "Provides authentication",
            "points": 15,
            "answer": "GCM",
            "explanation": "GCM (Galois/Counter Mode) is the most secure block cipher mode because it provides both confidentiality and authenticity. Unlike CBC or ECB, GCM includes built-in authentication and is resistant to padding oracle attacks.",
            "key_points": "• Authenticated encryption\n• No padding needed\n• Better than CBC/ECB\n• AEAD mode"
        },
        {
            "title": "Secure Protocol",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What protocol should replace Telnet? (3 letters)",
            "category": "Network Security",
            "hint": "Secure Shell",
            "points": 15,
            "answer": "SSH",
            "explanation": "SSH (Secure Shell) should replace Telnet for remote access. Telnet transmits data in plaintext, making it vulnerable to eavesdropping. SSH provides encrypted communications, strong authentication, and integrity checking.",
            "key_points": "• Encrypted connection\n• Replaces Telnet\n• Secure by default\n• Industry standard"
        },
        {
            "title": "Auth Header",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What type of Authentication header uses 'Bearer'? (starts with O)",
            "category": "Web Security",
            "hint": "OAuth 2.0 token type",
            "points": 15,
            "answer": "OAuth",
            "explanation": "OAuth uses 'Bearer' tokens in the Authorization header. This is the standard for OAuth 2.0 token authentication, where the token grants access to resources. The word 'Bearer' indicates that the holder of this token has been authorized to access the protected resource.",
            "key_points": "• Standard OAuth format\n• Token-based auth\n• Used in APIs\n• Access delegation"
        },
        {
            "title": "Secure Config",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What file permission (octal) should private SSH keys have?",
            "category": "System Security",
            "hint": "Only owner read",
            "points": 15,
            "answer": "600",
            "explanation": "600 (rw-------) is the correct permission for SSH private keys. This allows only the owner to read and write the file, preventing other users from accessing the key. More permissive settings like 644 or 666 would expose the private key to unauthorized users.",
            "key_points": "• Owner read/write only\n• No group access\n• No other access\n• Protect private keys"
        },
        {
            "title": "Secure Hash",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the output size of SHA-3-256 in bits?",
            "category": "Cryptography",
            "hint": "Same as SHA-256",
            "points": 15,
            "answer": "256",
            "explanation": "SHA-3-256 produces a 256-bit hash output. While it's different from SHA-256 internally, it produces the same output size. SHA-3 was designed as a backup to SHA-2 and uses a different internal structure (Keccak) making it resistant to length extension attacks.",
            "key_points": "• 256-bit output\n• Different from SHA-2\n• No length extension\n• NIST standard"
        },
        {
            "title": "Memory Attack",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What type of attack overwrites return addresses? (One word)",
            "category": "Application Security",
            "hint": "Stack based attack",
            "points": 15,
            "answer": "overflow",
            "explanation": "A buffer overflow attack overwrites return addresses on the stack. This classic attack occurs when a program writes more data to a buffer than it can hold, potentially allowing an attacker to execute arbitrary code by overwriting the return address with a malicious value.",
            "key_points": "• Overwrites stack\n• Changes program flow\n• Classic vulnerability\n• Need bounds checking"
        },
        {
            "title": "Secure DNS",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What port does DNS over TLS (DoT) use?",
            "category": "Network Security",
            "hint": "Between 852 and 854",
            "points": 15,
            "answer": "853",
            "explanation": "DNS over TLS (DoT) uses port 853. This encrypted version of DNS provides privacy and security by wrapping DNS queries in TLS encryption. Unlike traditional DNS on port 53, DoT prevents eavesdropping and tampering of DNS queries.",
            "key_points": "• Encrypted DNS\n• Different from port 53\n• Prevents snooping\n• Privacy focused"
        },
        {
            "title": "Secure Time",
            "platform": "K-Tech Somali",
            "difficulty": "hard",
            "description": "What is the maximum safe lifetime (in hours) for a JWT token?",
            "category": "Web Security",
            "hint": "One day",
            "points": 15,
            "answer": "24",
            "explanation": "24 hours is generally considered the maximum safe lifetime for a JWT token. Longer expiration times increase the window of opportunity for token theft and replay attacks. Short-lived tokens (1-2 hours) are even better, with refresh tokens used for longer sessions.",
            "key_points": "• 24 hours maximum\n• Shorter is better\n• Use refresh tokens\n• Balance security/UX"
        }
    ]
} 