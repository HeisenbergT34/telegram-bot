{
    "topics": [
        "What programming language would you recommend for beginners and why?",
        "How do you stay motivated when learning to code?",
        "What's your favorite development tool or IDE? Share your experience!",
        "How do you balance learning new technologies with mastering the basics?",
        "What's the most challenging bug you've ever solved?",
        "Share your experience with remote work as a developer. What are the pros and cons?",
        "How do you explain technical concepts to non-technical people?",
        "What's your approach to learning a new programming language or framework?",
        "How do you handle work-life balance in tech?",
        "What's your preferred method for debugging code?",
        "How do you keep your coding skills sharp?",
        "What's your opinion on AI tools in programming?",
        "How do you organize your development workflow?",
        "What's the best programming advice you've ever received?",
        "How do you approach code documentation?",
        "What's your strategy for solving complex programming problems?",
        "How do you stay updated with the latest tech trends?",
        "What's your experience with pair programming?",
        "How do you handle technical debt in your projects?",
        "What's your favorite programming paradigm and why?",
        "How do you ensure code security in your projects?",
        "What's your approach to testing code?",
        "How do you handle project deadlines and pressure?",
        "What's your experience with code reviews?",
        "How do you choose which technology stack to use for a project?",
        "What's your opinion on low-code/no-code platforms?",
        "How do you handle disagreements in technical decisions?",
        "What's your approach to optimizing code performance?",
        "How do you maintain clean and readable code?",
        "What's your experience with agile development?",
        "How do you handle legacy code?",
        "What's your approach to error handling in code?",
        "How do you manage multiple projects simultaneously?",
        "What's your experience with cloud platforms?",
        "How do you approach database design?",
        "What's your strategy for scaling applications?",
        "How do you handle user feedback and feature requests?",
        "What's your experience with microservices?",
        "How do you approach API design?",
        "What's your opinion on code bootcamps vs traditional education?"
    ]
} 